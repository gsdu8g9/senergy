.TH "Senergy::Dns::Message" 3 "Wed Jan 29 2014" "Version 1.0" "Senergy" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Senergy::Dns::Message \- 
.PP
Represents a DNS packet as described in section 4 of RFC-1035\&. A DNS packet is the standard message format that is transmitted and received by DNS clients and hosts\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <message\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMessage\fP ()"
.br
.RI "\fIInitializes a new instance of the \fBMessage\fP class, with default values, without questions, answers, authorities and additionals\&. \fP"
.ti -1c
.RI "bool \fBDeserialize\fP (\fBByteBuffer\fP &buffer)"
.br
.RI "\fIDeserializes a DNS packet header from the specified buffer into this instance\&. \fP"
.ti -1c
.RI "bool \fBSerialize\fP (\fBByteBuffer\fP &buffer)"
.br
.RI "\fISerializes this DNS message (packet) into the specified \fBByteBuffer\fP\&. \fP"
.ti -1c
.RI "void \fBReset\fP ()"
.br
.RI "\fIResets this message so that all vectors/collections will be cleared, and default values restored\&. \fP"
.ti -1c
.RI "int \fBGetQuestionCount\fP ()"
.br
.RI "\fIGets the amount of questions this DNS message currently holds\&. \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBMessageQuestionPtrVector\fP \fBQuestions\fP"
.br
.RI "\fIHolds all the 'question messages' that are part of this DNS message\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Represents a DNS packet as described in section 4 of RFC-1035\&. A DNS packet is the standard message format that is transmitted and received by DNS clients and hosts\&. 


.PP
\fBAuthor:\fP
.RS 4
Swen Kooij (Photonios) 
.RE
.PP

.PP
Definition at line 41 of file message\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Senergy::Dns::Message::Message ()"

.PP
Initializes a new instance of the \fBMessage\fP class, with default values, without questions, answers, authorities and additionals\&. 
.PP
Definition at line 29 of file message\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "bool Senergy::Dns::Message::Deserialize (\fBByteBuffer\fP &buffer)"

.PP
Deserializes a DNS packet header from the specified buffer into this instance\&. 
.PP
\fBNote:\fP
.RS 4
The DNS packet header is 12 bytes, the specified buffer should have at least 12 bytes left to read\&. Deserialization will fail when there are less then 12 bytes left to read\&.
.PP
This will overwrite all contents currently in this message\&.
.PP
If the operation suceseeded, the buffer's position will have at least advanced 12 bytes\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP The buffer to read from, should contain a DNS packet message\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A boolean indicating whether deserialization was succesfull\&. True is returned when it was a success and false is returned when it failed\&. 
.RE
.PP

.PP
Definition at line 33 of file message\&.cpp\&.
.SS "int Senergy::Dns::Message::GetQuestionCount ()"

.PP
Gets the amount of questions this DNS message currently holds\&. 
.PP
\fBReturns:\fP
.RS 4
The amount of questions this DNS message currently holds\&. 
.RE
.PP

.PP
Definition at line 85 of file message\&.cpp\&.
.SS "void Senergy::Dns::Message::Reset ()"

.PP
Resets this message so that all vectors/collections will be cleared, and default values restored\&. 
.PP
Definition at line 80 of file message\&.cpp\&.
.SS "bool Senergy::Dns::Message::Serialize (\fBByteBuffer\fP &buffer)"

.PP
Serializes this DNS message (packet) into the specified \fBByteBuffer\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP The buffer to write the serialized DNS message to\&.
.RE
.PP
\fBReturns:\fP
.RS 4
A boolean indicating whether serialization was succesfull\&. True is returned when it was a success and false is returned when it failed\&. 
.RE
.PP

.PP
Definition at line 56 of file message\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBMessageQuestionPtrVector\fP Senergy::Dns::Message::Questions"

.PP
Holds all the 'question messages' that are part of this DNS message\&. 
.PP
Definition at line 97 of file message\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Senergy from the source code\&.
