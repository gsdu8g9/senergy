<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_senergy_1_1_dns_1_1_name_server_record" kind="class" prot="public">
    <compoundname>Senergy::Dns::NameServerRecord</compoundname>
    <basecompoundref refid="class_senergy_1_1_dns_1_1_resource_record_interface" prot="public" virt="non-virtual">Senergy::Dns::ResourceRecordInterface</basecompoundref>
    <includes refid="record__nameserver_8h" local="no">record_nameserver.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_senergy_1_1_dns_1_1_name_server_record_1a684e037141e6954ff73df2a460b991ac" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string Senergy::Dns::NameServerRecord::m_address</definition>
        <argsstring></argsstring>
        <name>m_address</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="121" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a435c6b989e070adcfce7b72c02ae83fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Senergy::Dns::NameServerRecord::NameServerRecord</definition>
        <argsstring>(ResourceRecordBasePtr base)</argsstring>
        <name>NameServerRecord</name>
        <param>
          <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="class_senergy_1_1_dns_1_1_name_server_record" kindref="compound">NameServerRecord</ref> class with the specified resource record base. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The base resource record instance to use for the NameServer record. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="54" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a9e9b980a9c341cff47bb5840fc01ed06" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Senergy::Dns::NameServerRecord::Serialize</definition>
        <argsstring>(ByteBuffer &amp;buffer)</argsstring>
        <name>Serialize</name>
        <reimplements refid="class_senergy_1_1_dns_1_1_resource_record_interface_1ab81e0a7ea292513c5c34a3be0c7a6dca">Serialize</reimplements>
        <param>
          <type><ref refid="class_senergy_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Serializes this record into the specified buffer. This does not handle the serialization of the first (base) part of the resource record. Call SerializeBase for that. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to serialize to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean indicating whether the serialization was successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="64" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="46" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a6e01ac3f215b4766cae9ccc7fa58987a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool Senergy::Dns::NameServerRecord::Deserialize</definition>
        <argsstring>(ByteBuffer &amp;buffer)</argsstring>
        <name>Deserialize</name>
        <reimplements refid="class_senergy_1_1_dns_1_1_resource_record_interface_1ade2e0b9817476ea2161b694efd3e02db">Deserialize</reimplements>
        <param>
          <type><ref refid="class_senergy_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Deserializes the record from the specified buffer. This does not handle deserialization of the first (base) part of the resource record. Call DeserializeBase for that. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to deserialize from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="72" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="36" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a006930a7fc6c7d736cfe5c0ee1d79b9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abf5eec20c95f05b57c5c02eaed349e16" kindref="member">ResourceRecordInterfacePtr</ref></type>
        <definition>ResourceRecordInterfacePtr Senergy::Dns::NameServerRecord::Create</definition>
        <argsstring>(ResourceRecordBasePtr base)</argsstring>
        <name>Create</name>
        <reimplements refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abe37068b670f89481a145e1e9c2c8267">Create</reimplements>
        <param>
          <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Creates a new instance of this class, and returns it as a shared pointer to an instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>The derived class should create an instance of itself and return the polymorphic form (as it&apos;s base).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_senergy_1_1_dns_1_1_resource_record_base" kindref="compound">ResourceRecordBase</ref> class to pass to the constructor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A shared pointer to an instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> class, which is just the polymorphic form of the derived class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="86" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="55" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a2ad5b053bceedbf8bf927a275d530431" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_senergy_1_1_dns_1a590bfd748c955364770f5ce358d9dfe0" kindref="member">ResourceRecordType</ref></type>
        <definition>ResourceRecordType Senergy::Dns::NameServerRecord::GetType</definition>
        <argsstring>()</argsstring>
        <name>GetType</name>
        <reimplements refid="class_senergy_1_1_dns_1_1_resource_record_interface_1af895ba199749599d42f8e6a737eb9118">GetType</reimplements>
        <briefdescription>
<para>Gets the type of of this record (derived), wich is a value from the ResourceRecordType enumuration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A value from the ResourceRecordType enumuration which denotes the type of this record. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="95" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a013b114dfa28ff37eb3f1a3c24390646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Senergy::Dns::NameServerRecord::SetAddress</definition>
        <argsstring>(const std::string &amp;address)</argsstring>
        <name>SetAddress</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
<para>Sets the NameServer address that needs to be serialized. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>address</parametername>
</parameternamelist>
<parameterdescription>
<para>The NameServer address to be serialized. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="102" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a012e369dd4a94c98cb01e6df87ea8cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string Senergy::Dns::NameServerRecord::GetAddress</definition>
        <argsstring>()</argsstring>
        <name>GetAddress</name>
        <briefdescription>
<para>Gets the NameServer address that was deserialized. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The NameServer address that was deserialized. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="109" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_name_server_record_1a95047855d9e9fb77fbbfa8534c3ddb62" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Senergy::Dns::NameServerRecord::Dump</definition>
        <argsstring>()</argsstring>
        <name>Dump</name>
        <reimplements refid="class_senergy_1_1_dns_1_1_resource_record_interface_1aced6e4bc388ce3568d72d9670a2e9da5">Dump</reimplements>
        <briefdescription>
<para>Dumps all fields to the standard output, with their values. In the following format: </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="117" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_record_nameserver.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a DNS &apos;NS&apos; record, which is a resource record that contains an nameserver address. It is what root DNS servers usually send back. This is defined in section 3.3.11 of RFC 1035. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Swen Kooij (Photonios) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="42">
        <label>Senergy::Dns::NameServerRecord</label>
        <link refid="class_senergy_1_1_dns_1_1_name_server_record"/>
        <childnode refid="43" relation="public-inheritance">
        </childnode>
      </node>
      <node id="43">
        <label>Senergy::Dns::ResourceRecordInterface</label>
        <link refid="class_senergy_1_1_dns_1_1_resource_record_interface"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="44">
        <label>Senergy::Dns::NameServerRecord</label>
        <link refid="class_senergy_1_1_dns_1_1_name_server_record"/>
        <childnode refid="45" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>Senergy::Dns::ResourceRecordInterface</label>
        <link refid="class_senergy_1_1_dns_1_1_resource_record_interface"/>
      </node>
    </collaborationgraph>
    <location file="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" line="44" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/record_nameserver.h" bodystart="43" bodyend="122"/>
    <listofallmembers>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a59bcfc62cfc3a68464245b13ad3785e6" prot="protected" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>Base</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a006930a7fc6c7d736cfe5c0ee1d79b9d" prot="public" virt="virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>Create</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a342b71b9977f20ecb1dc7b3fd6ae0751" prot="public" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>CreateCast</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a6e01ac3f215b4766cae9ccc7fa58987a" prot="public" virt="virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>Deserialize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a95047855d9e9fb77fbbfa8534c3ddb62" prot="public" virt="virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>Dump</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a012e369dd4a94c98cb01e6df87ea8cbc" prot="public" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>GetAddress</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a6f603d9d3ffe34e4376ea8b27fd0c72d" prot="public" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>GetBase</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a4332e80632928d846abe9a58f912c217" prot="public" virt="virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>GetClass</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a2ad5b053bceedbf8bf927a275d530431" prot="public" virt="virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>GetType</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a684e037141e6954ff73df2a460b991ac" prot="private" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>m_address</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1ae2ffc1e85320769af1eabe781fcfc412" prot="protected" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>m_base</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a435c6b989e070adcfce7b72c02ae83fb" prot="public" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>NameServerRecord</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a8e4eb71ac27838d547e48a171774142f" prot="public" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>ResourceRecordInterface</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abf5eec20c95f05b57c5c02eaed349e16" prot="protected" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>ResourceRecordInterfacePtr</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a9e9b980a9c341cff47bb5840fc01ed06" prot="public" virt="virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>Serialize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_name_server_record_1a013b114dfa28ff37eb3f1a3c24390646" prot="public" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>SetAddress</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1aaebfbc52b464557ce9a3f36fbc08acd3" prot="protected" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>SetResourceSize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a54207eceee2ae035ae5293209b3e721c" prot="protected" virt="non-virtual"><scope>Senergy::Dns::NameServerRecord</scope><name>SetResourceSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
