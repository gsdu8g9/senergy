<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_senergy_1_1_vector_x" kind="class" prot="public">
    <compoundname>Senergy::VectorX</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::vector&lt; T &gt;</basecompoundref>
    <includes refid="vectorx_8h" local="no">vectorx.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_senergy_1_1_vector_x_1aaeb6919f76131faa4965a8e6f671b2d6" prot="private" static="no">
        <type>std::vector&lt; T &gt;</type>
        <definition>typedef std::vector&lt;T&gt; Senergy::VectorX&lt; T &gt;::BaseClass</definition>
        <argsstring></argsstring>
        <name>BaseClass</name>
        <briefdescription>
<para>Simple typedef to access the base class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" line="65" column="1" bodyfile="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" bodystart="65" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_senergy_1_1_vector_x_1a99bed6d49a3a93e6a133837330218ee7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Senergy::VectorX&lt; T &gt;::VectorX</definition>
        <argsstring>()</argsstring>
        <name>VectorX</name>
        <briefdescription>
<para>Initializes a new, empty vector. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" line="46" column="1" bodyfile="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_vector_x_1a4df34dceed944ef14df649a538d9c1b1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T Senergy::VectorX&lt; T &gt;::Add</definition>
        <argsstring>(T value)</argsstring>
        <name>Add</name>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds the specified item to the vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The object/value to add to the vector. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" line="55" column="1" bodyfile="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" bodystart="55" bodyend="59"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>An improvemend upon the standard vector (std::vector), but it&apos;s interface is more like the rest of <ref refid="namespace_senergy" kindref="compound">Senergy</ref> (naming). All normal functionality is still available, and switching between <ref refid="class_senergy_1_1_vector_x" kindref="compound">VectorX</ref> and std::vector should be painless. </para>    </briefdescription>
    <detaileddescription>
<para>T The type that the vector will contain.</para><para><simplesect kind="author"><para>Swen Kooij (Photonios) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="42">
        <label>std::vector&lt; T &gt;</label>
      </node>
      <node id="41">
        <label>Senergy::VectorX&lt; T &gt;</label>
        <link refid="class_senergy_1_1_vector_x"/>
        <childnode refid="42" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="44">
        <label>std::vector&lt; T &gt;</label>
      </node>
      <node id="43">
        <label>Senergy::VectorX&lt; T &gt;</label>
        <link refid="class_senergy_1_1_vector_x"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" line="41" column="1" bodyfile="/home/photonios/Documents/Senergy/src/senergy/vectorx.h" bodystart="40" bodyend="66"/>
    <listofallmembers>
      <member refid="class_senergy_1_1_vector_x_1a4df34dceed944ef14df649a538d9c1b1" prot="public" virt="non-virtual"><scope>Senergy::VectorX</scope><name>Add</name></member>
      <member refid="class_senergy_1_1_vector_x_1aaeb6919f76131faa4965a8e6f671b2d6" prot="private" virt="non-virtual"><scope>Senergy::VectorX</scope><name>BaseClass</name></member>
      <member refid="class_senergy_1_1_vector_x_1a99bed6d49a3a93e6a133837330218ee7" prot="public" virt="non-virtual"><scope>Senergy::VectorX</scope><name>VectorX</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
