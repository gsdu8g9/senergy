<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_senergy_1_1_dns_1_1_resource_record_interface" kind="class" prot="public" abstract="yes">
    <compoundname>Senergy::Dns::ResourceRecordInterface</compoundname>
    <derivedcompoundref refid="class_senergy_1_1_dns_1_1_i_p_v4_record" prot="public" virt="non-virtual">Senergy::Dns::IPV4Record</derivedcompoundref>
    <derivedcompoundref refid="class_senergy_1_1_dns_1_1_name_server_record" prot="public" virt="non-virtual">Senergy::Dns::NameServerRecord</derivedcompoundref>
    <derivedcompoundref refid="class_senergy_1_1_dns_1_1_unknown_record" prot="public" virt="non-virtual">Senergy::Dns::UnknownRecord</derivedcompoundref>
    <includes refid="resource__record__interface_8h" local="no">resource_record_interface.h</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="class_senergy_1_1_dns_1_1_resource_record_interface_1abf5eec20c95f05b57c5c02eaed349e16" prot="protected" static="no">
        <type>std::shared_ptr&lt; <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> &gt;</type>
        <definition>typedef std::shared_ptr&lt;ResourceRecordInterface&gt; Senergy::Dns::ResourceRecordInterface::ResourceRecordInterfacePtr</definition>
        <argsstring></argsstring>
        <name>ResourceRecordInterfacePtr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="48" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="class_senergy_1_1_dns_1_1_resource_record_interface_1a59bcfc62cfc3a68464245b13ad3785e6" prot="protected" static="no">
        <type><ref refid="class_senergy_1_1_dns_1_1_resource_record_base" kindref="compound">ResourceRecordBase</ref></type>
        <definition>typedef ResourceRecordBase Senergy::Dns::ResourceRecordInterface::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
<para>More logical way to allow access to the base class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="166" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_senergy_1_1_dns_1_1_resource_record_interface_1ae2ffc1e85320769af1eabe781fcfc412" prot="protected" static="no" mutable="no">
        <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
        <definition>ResourceRecordBasePtr Senergy::Dns::ResourceRecordInterface::m_base</definition>
        <argsstring></argsstring>
        <name>m_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="170" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1a8e4eb71ac27838d547e48a171774142f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Senergy::Dns::ResourceRecordInterface::ResourceRecordInterface</definition>
        <argsstring>(ResourceRecordBasePtr base)</argsstring>
        <name>ResourceRecordInterface</name>
        <param>
          <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Initializes a new instance of of the ResourceRecordInterfacePtr class with a reference to an instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_base" kindref="compound">ResourceRecordBase</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>A resource record can have multiple types, a class that implents this interface handles the serialization and deserialization of the type-specific part.</para></parameterdescription>
</parameteritem>
</parameterlist>
The first part of a resource record is always the same. This is why we need an instance of the base class here. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="62" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_interface.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1ab81e0a7ea292513c5c34a3be0c7a6dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Senergy::Dns::ResourceRecordInterface::Serialize</definition>
        <argsstring>(ByteBuffer &amp;buffer)=0</argsstring>
        <name>Serialize</name>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_unknown_record_1aa792712816e5f177b554f1b7d6018563">Serialize</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_name_server_record_1a9e9b980a9c341cff47bb5840fc01ed06">Serialize</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_i_p_v4_record_1adc8bfc217949628f7b88fe69d065d630">Serialize</reimplementedby>
        <param>
          <type><ref refid="class_senergy_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Serializes this record into the specified buffer. This does not handle the serialization of the first (base) part of the resource record. Call SerializeBase for that. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to serialize to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean indicating whether the serialization was successful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="72" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1ade2e0b9817476ea2161b694efd3e02db" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>bool</type>
        <definition>virtual bool Senergy::Dns::ResourceRecordInterface::Deserialize</definition>
        <argsstring>(ByteBuffer &amp;buffer)=0</argsstring>
        <name>Deserialize</name>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_unknown_record_1af58fb86354cd176aefaa0000a706d646">Deserialize</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_name_server_record_1a6e01ac3f215b4766cae9ccc7fa58987a">Deserialize</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_i_p_v4_record_1a6fffdc2823b53f8f2fede5263e45b232">Deserialize</reimplementedby>
        <param>
          <type><ref refid="class_senergy_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Deserializes the record from the specified buffer. This does not handle deserialization of the first (base) part of the resource record. Call DeserializeBase for that. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to deserialize from. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1abe37068b670f89481a145e1e9c2c8267" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abf5eec20c95f05b57c5c02eaed349e16" kindref="member">ResourceRecordInterfacePtr</ref></type>
        <definition>virtual ResourceRecordInterfacePtr Senergy::Dns::ResourceRecordInterface::Create</definition>
        <argsstring>(ResourceRecordBasePtr base)=0</argsstring>
        <name>Create</name>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_unknown_record_1a98f66426e8e89449eaac24e0ac4eeb60">Create</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_name_server_record_1a006930a7fc6c7d736cfe5c0ee1d79b9d">Create</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_i_p_v4_record_1a4d31a8d3f562f8128c053071120d6dd2">Create</reimplementedby>
        <param>
          <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Creates a new instance of this class, and returns it as a shared pointer to an instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> class. </para>        </briefdescription>
        <detaileddescription>
<para>The derived class should create an instance of itself and return the polymorphic form (as it&apos;s base).</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="class_senergy_1_1_dns_1_1_resource_record_base" kindref="compound">ResourceRecordBase</ref> class to pass to the constructor.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A shared pointer to an instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> class, which is just the polymorphic form of the derived class. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1af895ba199749599d42f8e6a737eb9118" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="namespace_senergy_1_1_dns_1a590bfd748c955364770f5ce358d9dfe0" kindref="member">ResourceRecordType</ref></type>
        <definition>virtual ResourceRecordType Senergy::Dns::ResourceRecordInterface::GetType</definition>
        <argsstring>()=0</argsstring>
        <name>GetType</name>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_unknown_record_1a3b6e5feb0277646b2513432cede8ebbd">GetType</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_name_server_record_1a2ad5b053bceedbf8bf927a275d530431">GetType</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_i_p_v4_record_1a7f67f0546dc2d93b04a264fabf871d78">GetType</reimplementedby>
        <briefdescription>
<para>Gets the type of of this record (derived), wich is a value from the ResourceRecordType enumuration. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A value from the ResourceRecordType enumuration which denotes the type of this record. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="103" column="1"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1a4332e80632928d846abe9a58f912c217" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="namespace_senergy_1_1_dns_1a953f153bc411213d621d00c1e1b3eb9d" kindref="member">ResourceRecordClass</ref></type>
        <definition>ResourceRecordClass Senergy::Dns::ResourceRecordInterface::GetClass</definition>
        <argsstring>()</argsstring>
        <name>GetClass</name>
        <briefdescription>
<para>Gets the class of this record. This will almost always be the same and does not have to be implemented by the derived class. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A value from the ResourceRecordClass enumuration which denotes the class of this record. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="112" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_interface.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1a6f603d9d3ffe34e4376ea8b27fd0c72d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
        <definition>ResourceRecordBasePtr Senergy::Dns::ResourceRecordInterface::GetBase</definition>
        <argsstring>() const </argsstring>
        <name>GetBase</name>
        <briefdescription>
<para>Returns the underlying base resource record for this record. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>An instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_base" kindref="compound">ResourceRecordBase</ref> class, which represents the first part in this resource record. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="120" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_interface.cpp" bodystart="34" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1aced6e4bc388ce3568d72d9670a2e9da5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Senergy::Dns::ResourceRecordInterface::Dump</definition>
        <argsstring>()</argsstring>
        <name>Dump</name>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_name_server_record_1a95047855d9e9fb77fbbfa8534c3ddb62">Dump</reimplementedby>
        <reimplementedby refid="class_senergy_1_1_dns_1_1_i_p_v4_record_1a5dc31b6ac003bf5b8897d1431e9eb0db">Dump</reimplementedby>
        <briefdescription>
<para>Dumps all fields to the standard output, with their values. In the following format: </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="128" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_interface.cpp" bodystart="54" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1a342b71b9977f20ecb1dc7b3fd6ae0751" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abf5eec20c95f05b57c5c02eaed349e16" kindref="member">ResourceRecordInterfacePtr</ref></type>
        <definition>static ResourceRecordInterfacePtr Senergy::Dns::ResourceRecordInterface::CreateCast</definition>
        <argsstring>(ResourceRecordBasePtr base)</argsstring>
        <name>CreateCast</name>
        <param>
          <type><ref refid="namespace_senergy_1_1_dns_1a72915c893fbf242018e79d8f92e1646b" kindref="member">ResourceRecordBasePtr</ref></type>
          <declname>base</declname>
        </param>
        <briefdescription>
<para>Creates a new instance of the specified type with the specified resource record base instance, and casts it to a shared ppinter to a <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> class (polymorhpism). The specified type must inherit from <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>T The type to create and cast to <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> shared pointer.</para><para><simplesect kind="return"><para>An instance of the specified type but, casted to an instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_interface" kindref="compound">ResourceRecordInterface</ref> class (shared pointer). </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="140" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" bodystart="140" bodyend="145"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1aaebfbc52b464557ce9a3f36fbc08acd3" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Senergy::Dns::ResourceRecordInterface::SetResourceSize</definition>
        <argsstring>(unsigned short resource_size)</argsstring>
        <name>SetResourceSize</name>
        <param>
          <type>unsigned short</type>
          <declname>resource_size</declname>
        </param>
        <briefdescription>
<para>Sets the resource size in the base record. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the resource </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="153" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_interface.cpp" bodystart="44" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_interface_1a54207eceee2ae035ae5293209b3e721c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Senergy::Dns::ResourceRecordInterface::SetResourceSize</definition>
        <argsstring>(unsigned int resource_size)</argsstring>
        <name>SetResourceSize</name>
        <param>
          <type>unsigned int</type>
          <declname>resource_size</declname>
        </param>
        <briefdescription>
<para>Sets the resource size in the base record. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the resource </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="160" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_interface.cpp" bodystart="49" bodyend="52"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines an interface using pure virtuals for classes that wish to implement a specic resource record type. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Swen Kooij (Photonios). </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="55">
        <label>Senergy::Dns::IPV4Record</label>
        <link refid="class_senergy_1_1_dns_1_1_i_p_v4_record"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="56">
        <label>Senergy::Dns::NameServerRecord</label>
        <link refid="class_senergy_1_1_dns_1_1_name_server_record"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="57">
        <label>Senergy::Dns::UnknownRecord</label>
        <link refid="class_senergy_1_1_dns_1_1_unknown_record"/>
        <childnode refid="54" relation="public-inheritance">
        </childnode>
      </node>
      <node id="54">
        <label>Senergy::Dns::ResourceRecordInterface</label>
        <link refid="class_senergy_1_1_dns_1_1_resource_record_interface"/>
      </node>
    </inheritancegraph>
    <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" line="44" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_interface.h" bodystart="43" bodyend="171"/>
    <listofallmembers>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a59bcfc62cfc3a68464245b13ad3785e6" prot="protected" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>Base</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abe37068b670f89481a145e1e9c2c8267" prot="public" virt="pure-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>Create</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a342b71b9977f20ecb1dc7b3fd6ae0751" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>CreateCast</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1ade2e0b9817476ea2161b694efd3e02db" prot="public" virt="pure-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>Deserialize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1aced6e4bc388ce3568d72d9670a2e9da5" prot="public" virt="virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>Dump</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a6f603d9d3ffe34e4376ea8b27fd0c72d" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>GetBase</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a4332e80632928d846abe9a58f912c217" prot="public" virt="virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>GetClass</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1af895ba199749599d42f8e6a737eb9118" prot="public" virt="pure-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>GetType</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1ae2ffc1e85320769af1eabe781fcfc412" prot="protected" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>m_base</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a8e4eb71ac27838d547e48a171774142f" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>ResourceRecordInterface</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1abf5eec20c95f05b57c5c02eaed349e16" prot="protected" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>ResourceRecordInterfacePtr</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1ab81e0a7ea292513c5c34a3be0c7a6dca" prot="public" virt="pure-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>Serialize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1aaebfbc52b464557ce9a3f36fbc08acd3" prot="protected" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>SetResourceSize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_interface_1a54207eceee2ae035ae5293209b3e721c" prot="protected" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordInterface</scope><name>SetResourceSize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
