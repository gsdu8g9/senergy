<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="class_senergy_1_1_dns_1_1_resource_record_collection" kind="class" prot="public">
    <compoundname>Senergy::Dns::ResourceRecordCollection</compoundname>
    <includes refid="resource__record__collection_8h" local="no">resource_record_collection.h</includes>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_senergy_1_1_dns_1_1_resource_record_collection_1aee27f65b6b0ada40ef25de8189d55436" prot="private" static="no">
        <type><ref refid="class_senergy_1_1_fast_map" kindref="compound">FastMap</ref>&lt; <ref refid="namespace_senergy_1_1_dns_1a590bfd748c955364770f5ce358d9dfe0" kindref="member">ResourceRecordType</ref>, <ref refid="class_senergy_1_1_vector_x" kindref="compound">VectorX</ref>&lt; <ref refid="namespace_senergy_1_1_dns_1a425b37e088cb64a1bda6205581ade5c8" kindref="member">ResourceRecordInterfacePtr</ref> &gt; &gt;</type>
        <definition>typedef FastMap&lt;ResourceRecordType, VectorX&lt;ResourceRecordInterfacePtr&gt; &gt; Senergy::Dns::ResourceRecordCollection::ResourceRecordMapCollection</definition>
        <argsstring></argsstring>
        <name>ResourceRecordMapCollection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="56" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_senergy_1_1_dns_1_1_resource_record_collection_1af5358ca4090c15dfe0366a8b16724fa3" prot="private" static="no" mutable="no">
        <type><ref refid="class_senergy_1_1_dns_1_1_resource_record_mapper" kindref="compound">ResourceRecordMapper</ref></type>
        <definition>ResourceRecordMapper Senergy::Dns::ResourceRecordCollection::m_mapper</definition>
        <argsstring></argsstring>
        <name>m_mapper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="122" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_senergy_1_1_dns_1_1_resource_record_collection_1a0f29ad274da2c4509bd1971a257fa6d2" prot="private" static="no" mutable="no">
        <type><ref refid="class_senergy_1_1_fast_map" kindref="compound">ResourceRecordMapCollection</ref></type>
        <definition>ResourceRecordMapCollection Senergy::Dns::ResourceRecordCollection::m_records</definition>
        <argsstring></argsstring>
        <name>m_records</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="125" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1a66f740bd63a874374e471973ee236d78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Senergy::Dns::ResourceRecordCollection::ResourceRecordCollection</definition>
        <argsstring>()</argsstring>
        <name>ResourceRecordCollection</name>
        <briefdescription>
<para>Initializes a new instance of the <ref refid="class_senergy_1_1_dns_1_1_resource_record_collection" kindref="compound">ResourceRecordCollection</ref> class. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="62" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_collection.cpp" bodystart="29" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1ad0d89b82d1a6d862d84e411decf81527" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Senergy::Dns::ResourceRecordCollection::Clear</definition>
        <argsstring>()</argsstring>
        <name>Clear</name>
        <briefdescription>
<para>Clears the collection of any existing records. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="67" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_collection.cpp" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1ae228f7ec1cf020033f64f68a3f5ea4e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Senergy::Dns::ResourceRecordCollection::Deserialize</definition>
        <argsstring>(MessageHeader &amp;header, ByteBuffer &amp;buffer)</argsstring>
        <name>Deserialize</name>
        <param>
          <type><ref refid="class_senergy_1_1_dns_1_1_message_header" kindref="compound">MessageHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="class_senergy_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Deserializes all resource records from the specified buffer, according to the information in the specified DNS message header. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This clears this collection of all existing records.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>The DNS message header to read the information on the amount of resource records from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to read/deserialize the records from.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean indicating whether the deserialization was succesful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="81" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_collection.cpp" bodystart="41" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1affa4da32b82b69f712c2383ab4f9ee8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Senergy::Dns::ResourceRecordCollection::Serialize</definition>
        <argsstring>(MessageHeader &amp;header, ByteBuffer &amp;buffer)</argsstring>
        <name>Serialize</name>
        <param>
          <type><ref refid="class_senergy_1_1_dns_1_1_message_header" kindref="compound">MessageHeader</ref> &amp;</type>
          <declname>header</declname>
        </param>
        <param>
          <type><ref refid="class_senergy_1_1_byte_buffer" kindref="compound">ByteBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Serializeds all resource records from the specified buffer, according to the information in the specified DNS message header. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>header</parametername>
</parameternamelist>
<parameterdescription>
<para>The DNS message header to write the information on the amount of resource records to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer to write the serialized records to.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A boolean indicating whether the serialization was succesful. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="93" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_collection.cpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1a62ac608c82f209ec4b0c2ed5bc155a73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Senergy::Dns::ResourceRecordCollection::Dump</definition>
        <argsstring>()</argsstring>
        <name>Dump</name>
        <briefdescription>
<para>Dumps the contents of this collection to the console. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="98" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_collection.cpp" bodystart="88" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1a8c1ab4704d6a5fd1fa58daadbd9f69d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_senergy_1_1_vector_x" kindref="compound">VectorX</ref>&lt; <ref refid="namespace_senergy_1_1_dns_1a425b37e088cb64a1bda6205581ade5c8" kindref="member">ResourceRecordInterfacePtr</ref> &gt; &amp;</type>
        <definition>VectorX&lt;ResourceRecordInterfacePtr&gt;&amp; Senergy::Dns::ResourceRecordCollection::operator[]</definition>
        <argsstring>(ResourceRecordType resource_record_type)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespace_senergy_1_1_dns_1a590bfd748c955364770f5ce358d9dfe0" kindref="member">ResourceRecordType</ref></type>
          <declname>resource_record_type</declname>
        </param>
        <briefdescription>
<para>Provides access the resource records in this collection based on the specified resource record type. Returns all the resource records of the specified type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>resource_record_type</parametername>
</parameternamelist>
<parameterdescription>
<para>A value from the ResourceRecordType enumuration which indicates which type of resource records to return.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A vector of resource records of the specified type, they are returned in their polymorphic form. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="110" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_senergy_1_1_dns_1_1_resource_record_collection_1ae4f58b8c1715119407f5ad2bcbdf5c60" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Senergy::Dns::ResourceRecordCollection::__register_mappings</definition>
        <argsstring>()</argsstring>
        <name>__register_mappings</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="117" column="1" bodyfile="/home/photonios/Documents/senergy/src/dns_resource_record_collection.cpp" bodystart="82" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A collection of resource record. We have many types of resource record. <ref refid="namespace_senergy" kindref="compound">Senergy</ref> DNS has a flexbile desing to simplify the implementation of additional records. This container is part of that design. It has the ability to contain all kinds of resource records. It also helps in serialization and deserialization. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Swen Kooij (Photonios) </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" line="53" column="1" bodyfile="/home/photonios/Documents/senergy/src/senergy/dns/resource_record_collection.h" bodystart="52" bodyend="126"/>
    <listofallmembers>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1ae4f58b8c1715119407f5ad2bcbdf5c60" prot="private" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>__register_mappings</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1ad0d89b82d1a6d862d84e411decf81527" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>Clear</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1ae228f7ec1cf020033f64f68a3f5ea4e1" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>Deserialize</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1a62ac608c82f209ec4b0c2ed5bc155a73" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>Dump</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1af5358ca4090c15dfe0366a8b16724fa3" prot="private" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>m_mapper</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1a0f29ad274da2c4509bd1971a257fa6d2" prot="private" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>m_records</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1a8c1ab4704d6a5fd1fa58daadbd9f69d5" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>operator[]</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1a66f740bd63a874374e471973ee236d78" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>ResourceRecordCollection</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1aee27f65b6b0ada40ef25de8189d55436" prot="private" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>ResourceRecordMapCollection</name></member>
      <member refid="class_senergy_1_1_dns_1_1_resource_record_collection_1affa4da32b82b69f712c2383ab4f9ee8c" prot="public" virt="non-virtual"><scope>Senergy::Dns::ResourceRecordCollection</scope><name>Serialize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
